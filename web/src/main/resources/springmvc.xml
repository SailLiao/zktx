<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">

	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy />
	<!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<!-- 节点中proxy-target-class="true"不为true时。 * 当登录的时候会报这个异常java.lang.NoSuchMethodException: 
		$Proxy54.login()， -->
	<aop:config proxy-target-class="true"></aop:config>

	<!-- 启用注解 -->
	<context:component-scan base-package="com.zktx.platform" />

	<!-- 注解驱动 -->
	<mvc:annotation-driven />


	<!-- 对静态资源文件的访问 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- 定义JSP文件的位置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- beanFactory -->
	<bean id="beanFactory" class="com.zktx.platform.util.spring.BeanFactory"></bean>

	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<!-- 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/zktx/platform/mapping/**/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zktx.platform.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 文件大小控制 10M=10*1024*1024(B)=10485760 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
	</bean>



	<!-- shiro ================================================================================= -->

	

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	<!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="MD5" />
		<!-- 迭代1次 -->
		<property name="hashIterations" value="1" />
	</bean>

	
	
	<bean id="jdbcRealm" class="com.zktx.platform.shiro.ShiroRealm">
		<property name="activeRoot" value="true"></property>
	</bean>

	<!-- 缓存管理器开始 -->  
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
	        <property name="cacheManager" ref="ehCacheManager"/>  
	</bean>  
	<bean id="ehCacheManager" class ="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
	    <property name="configLocation" value="classpath:ehcache-shiro.xml" />  
	    <property name="shared" value="true"></property>  
	</bean> 
	<!-- Shiro安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="jdbcRealm"></property>
		<!-- 注入缓存管理器-->  
	    <property name="cacheManager" ref="cacheManager" />  
	    <!-- 注入session管理器 -->  
	  
	</bean>
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="/toLoginPage"></property>
		<property name="successUrl" value="/action/index"></property>
		<property name="filterChainDefinitions">
			<value>
				/resources/** = anon
				/login = anon
				/logout = logout
				/annotation/**=authc 
				/inlineIdentify/**=authc 
				/dataManage/**=authc 
				/healthImg/**=authc 
				/action/**=authc 
				/log/**=authc 
				/stage/**=authc 
				/sysSet/**=authc 
				/dataMonitor/**=authc
				/tableSchema/**=authc 
				/mrTask/**=authc
				/uploadBatRecord/**=authc 
				/user/**=authc 
				/action/noRoleOr=anon
			</value>
		</property>
	</bean>
	
	<!-- shiro为集成springMvc 拦截异常
 <bean
  class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
  <property name="exceptionMappings">
   <props>
    <prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/action/noRoleOr</prop>
    <prop key="org.apache.shiro.authz.UnauthenticatedException">redirect:/action/noRoleOr</prop>
    <prop key="java.lang.IllegalArgumentException">/error.jsp</prop> 
    <prop key="java.lang.Exception">/error.jsp</prop> 
   </props>
  </property>
 </bean>-->

</beans>